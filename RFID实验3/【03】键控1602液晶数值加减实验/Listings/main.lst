C51 COMPILER V9.60.0.0   MAIN                                                              06/07/2023 12:39:01 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*********************************************************************
   2           * 实验名称：键控1602液晶数值加减实验
   3           * 可配书籍：上册-《深入浅出STC8增强型51单片机进阶攻略》已经出版
   4                       下册-《深入浅出STC8增强型51单片机实战攻略》还在写作
   5           * 书籍备注：龙顺宇编著 清华大学出版社出版
   6           * 淘宝店铺：https://520mcu.taobao.com/
   7           * 实验平台：思修电子工作室SX-RFID-B低频ID识别与应用开发板 Long
   8           * 芯片型号：STC8G1K08/17（微调后可移植至STC8A/F/C/G/H系列单片机）
   9           * 时钟说明：芯片内部11.0592MHz，在使用STC-ISP软件时需要先配置然后
  10           *           下载到单片机使得时钟配置生效。
  11           * 实验说明：断电前提下向开发板插入1602液晶模块，然后用USB线插入到
  12           Uart-USB接口给开发板供电，做好STC-ISP配置并下载程序，观察1602液晶
  13           的显示情况（第一行显示“====1602+KEY====”，第二行显示“NUM:00”），
  14           此时按下K1按键，则NUM数值增加，按下K2按键，则NUM数值减少，从而学
  15           习1602液晶与按键的交互过程，观察数值的加减效果。
  16          *********************************************************************/
  17          #include  "STC8H.h"       //主控芯片的头文件
  18          /***************************常用数据类型定义*************************/
  19          #define u8  uint8_t
  20          #define u16 uint16_t
  21          #define u32 uint32_t
  22          typedef unsigned char  uint8_t;
  23          typedef unsigned int   uint16_t;
  24          typedef unsigned long  uint32_t;
  25          /***************************端口/引脚定义区域************************/
  26          sbit KEY1=P3^4;           //按键1 
  27          sbit KEY2=P3^3;           //按键2
  28          sbit LCDRS=P3^6;          //LCD1602数据/命令选择端口
  29          sbit LCDEN=P3^7;          //LCD1602使能信号端口
  30          #define LCDDATA  P1       //LCD1602数据端口（仅用DB4至DB7）
  31          /***************************用户自定义数据区域***********************/
  32          u8 table1[]="====1602+KEY====";//LCD1602显示字符串数组1
  33          u8 table2[]="NUM:            ";//LCD1602显示字符串数组2
  34          u8 num=0;                 //自定义计数变量
  35          /*****************************函数声明区域***************************/
  36          void delay(u16 Count);    //延时函数
  37          void IO_init(void);       //IO初始化函数
  38          void KEY_Prosser(void);   //按键处理函数
  39          void LCD1602_Write(u8 cmdordata,u8 writetype);
  40          //写入液晶模组命令或数据函数
  41          void LCD1602_init(void);  //LCD1602初始化函数
  42          void LCD1602_DIS(void);   //显示字符函数
  43          void LCD1602_DIS_CHAR(u8 x,u8 y,u8 z);//在设定地址写入字符数据函数
  44          /******************************主函数区域****************************/
  45          void main(void)
  46          {
  47   1        u8 shi,ge;        //定义计数变量取位变量
  48   1        IO_init();        //IO初始化
  49   1        LCDEN=1;delay(200);//使能置“1”（防止复位乱码）
  50   1        LCDEN=0;delay(200);//使能清“0”（防止复位乱码）
  51   1        LCD1602_init();   //LCD1602初始化
  52   1        delay(200);       //延时等待稳定
  53   1        LCD1602_DIS();    //显示字符效果
  54   1        while(1)
C51 COMPILER V9.60.0.0   MAIN                                                              06/07/2023 12:39:01 PAGE 2   

  55   1        {
  56   2          KEY_Prosser();  //按键处理
  57   2          shi=num/10;     //取出计数变量的十位
  58   2          ge=num%10;      //取出计数变量的个位
  59   2          LCD1602_DIS_CHAR(2,5,shi+0x30); //在液晶第2行第6个位置显示出十位
  60   2          LCD1602_DIS_CHAR(2,6,ge+0x30);  //在液晶第2行第7个位置显示出个位
  61   2        }
  62   1      }
  63          /********************************************************************/
  64          //延时函数delay()，有形参Count用于控制延时函数执行次数，无返回值
  65          /********************************************************************/
  66          void delay(u16 Count)
  67          {
  68   1        u8 i,j;
  69   1        while(Count--)
  70   1        {
  71   2          for(i=0;i<50;i++)
  72   2            for(j=0;j<20;j++);
  73   2        }
  74   1      }
  75          /********************************************************************/
  76          //IO初始化函数IO_Init()，无形参，无返回值
  77          /********************************************************************/
  78          void IO_init(void)
  79          {
  80   1        //配置P3.3-4为准双向/弱上拉模式
  81   1        P3M0&=0xE7;     //P3M0.3-4=0
  82   1        P3M1&=0xE7;     //P3M1.3-4=0
  83   1        //配置P3.6-7为准双向/弱上拉模式
  84   1        P3M0&=0x3F;     //P3M0.6-7=0
  85   1        P3M1&=0x3F;     //P3M1.6-7=0
  86   1        //配置P1.0-3为准双向/弱上拉模式
  87   1        P1M0&=0xF0;     //P1M0.0-3=0
  88   1        P1M1&=0xF0;     //P1M1.0-3=0
  89   1        delay(10);      //等待I/O模式配置稳定
  90   1      }
  91          /********************************************************************/
  92          //按键处理函数KEY_Prosser(),无形参，无返回值
  93          /********************************************************************/
  94          void KEY_Prosser(void)
  95          {
  96   1        if(KEY1==0)     //KEY1按下了
  97   1        {
  98   2          delay(5);     //软件延时“消抖”
  99   2          if(KEY1==0)   //KEY1确实按下了
 100   2          {
 101   3            num++;      //计数变量自增
 102   3            if(num==100)//若自增到100
 103   3              num=0;    //重新置为0
 104   3          }
 105   2          while(!KEY1); //松手检测
 106   2        }
 107   1        if(KEY2==0)     //KEY2按下了
 108   1        {
 109   2          delay(5);     //软件延时“消抖”
 110   2          if(KEY2==0)   //KEY2确实按下了
 111   2          {
 112   3            if(num==0)  //若计数变量已经为0
 113   3              num=0;    //则保持为0
 114   3            else
 115   3              num--;    //否则计数变量自减
 116   3          }
C51 COMPILER V9.60.0.0   MAIN                                                              06/07/2023 12:39:01 PAGE 3   

 117   2          while(!KEY2); //松手检测
 118   2        }
 119   1      }
 120          /********************************************************************/
 121          //LCD1602初始化函数LCD1602_init()，无形参和返回值
 122          /********************************************************************/
 123          void LCD1602_init(void)
 124          {
 125   1        LCD1602_Write(0x28,0);delay(10);//数据总线为4位，显示2行，5*7点阵/每字符
 126   1        LCDEN=1;delay(10);              //使能置“1”
 127   1        LCDEN=0;delay(10);              //使能清“0”
 128   1        LCD1602_Write(0x0C,0);delay(10);//设置开显示，不显示光标
 129   1        LCD1602_Write(0x06,0);delay(10);//写入新数据后显示屏整体不移动仅光标右移
 130   1        LCD1602_Write(0x01,0);delay(10);//写入清屏命令
 131   1      }
 132          /********************************************************************/
 133          //显示字符函数LCD1602_DIS()，无形参和返回值
 134          /********************************************************************/
 135          void LCD1602_DIS(void)
 136          {
 137   1        u8 i;                 //定义控制循环变量i
 138   1        LCD1602_Write(0x80,0);//选择第一行
 139   1        delay(5);             //延时等待1602稳定
 140   1        for(i=0;i<16;i++)
 141   1        {
 142   2            LCD1602_Write(table1[i],1);//写入table1[]内容
 143   2            delay(1);
 144   2        }
 145   1        LCD1602_Write(0xC0,0);//选择第二行
 146   1        delay(5);             //延时等待1602稳定
 147   1        for(i=0;i<16;i++)
 148   1        {
 149   2            LCD1602_Write(table2[i],1);//写入table2[]内容
 150   2            delay(1);
 151   2        }
 152   1      }
 153          /********************************************************************/
 154          //写入液晶模组命令或数据函数LCD1602_Write()，有形参cmdordata
 155          //和writetype，无返回值
 156          /********************************************************************/
 157          void LCD1602_Write(u8 cmdordata,u8 writetype)
 158          {
 159   1        u8 temp=0;                //定义数据处理中间变量
 160   1        LCDRS=writetype;          //判断写入类型0为命令1为数据
 161   1        delay(2);                 //延时等待稳定
 162   1        LCDDATA&=0xF0;            //清数据引脚
 163   1        temp=cmdordata>>4;        //高四位移到低四位
 164   1        LCDDATA|=temp&0x0F;       //写高四位
 165   1        LCDEN=1;delay(2);         //使能置“1”
 166   1        LCDEN=0;delay(2);         //使能清“0”
 167   1        LCDDATA&=0xF0;            //清数据引脚
 168   1        LCDDATA|=cmdordata&0x0F;  //写低四位
 169   1        LCDEN=1;delay(2);         //使能置“1”
 170   1        LCDEN=0;delay(2);         //使能清“0”
 171   1      }
 172          /********************************************************************/
 173          //设定地址写入字符函数LCD1602_DIS_CHAR()，有形参x、y、z无返回值
 174          //x表示1602液晶的行，y表示列地址，z表示欲写入的字符
 175          /********************************************************************/
 176          void LCD1602_DIS_CHAR(u8 x,u8 y,u8 z)
 177          {
 178   1        u8 address;
C51 COMPILER V9.60.0.0   MAIN                                                              06/07/2023 12:39:01 PAGE 4   

 179   1        if(x==1)            //若欲显示在第一行
 180   1          address=0x80+y;   //第一行的行首地址+列地址
 181   1        else
 182   1          address=0xC0+y;   //第二行的行首地址+列地址
 183   1        LCD1602_Write(address,0);   //设定显示地址
 184   1        LCD1602_Write(z,1); //写入字符数据
 185   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    451    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
