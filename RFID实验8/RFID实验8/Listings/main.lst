C51 COMPILER V9.60.0.0   MAIN                                                              05/13/2025 08:44:01 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /******************************************************************
   2           * 实验名称：串口打印Manchester解码实验
   3          ******************************************************************/
   4          #include  "STC8G.h"       //主控芯片的头文件
   5          #include  "stdio.h"       //程序要用到printf()故而添加此头文件
   6          #include  "intrins.h"     //因为要用到nop()函数故而包含此文件
   7          /************************常用数据类型定义*************************/
   8          #define u8  uint8_t
   9          #define u16 uint16_t
  10          #define u32 uint32_t
  11          typedef unsigned char    uint8_t;
  12          typedef unsigned int     uint16_t;
  13          typedef unsigned long    uint32_t;
  14          /************************端口/引脚定义区域************************/
  15          sbit Mcode=P3^2;          //曼彻斯特码输入端
  16          /************************用户自定义数据区域***********************/
  17          #define SYSCLK 12000000UL //系统时钟频率值
  18          #define BAUD_SET  (65536-SYSCLK/9600/4)//波特率设定与计算 
  19          #define TIME_OUT  256     //最大超时阈值
  20          /**************************函数声明区域***************************/
  21          void delay(u16 Count);    //延时函数
  22          void delay384us(void);    //384us延时函数
  23          void IO_init(void);       //IO初始化函数
  24          void SYSCLK_CCO(u8 TYPE,u8 SET_F,u8 SET_P);//系统时钟输出函数
  25          void UART1_Init(void);    //串口1初始化函数
  26          void U1SEND_C(u8 SEND_C); //串口1发送单字符数据函数
  27          char putchar(char ch);    //发送字符重定向函数
  28          u32 Read_Card(void);      //读卡函数
  29          /***************************主函数区域****************************/
  30          void main(void)
  31          {
  32   1        u32 SN=0;               //定义卡号接收变量
  33   1        IO_init();              //IO初始化  
  34   1        SYSCLK_CCO(1,96,1);     //P1.6输出96分频的内部高速时钟12M/96=125kHz
  35   1        UART1_Init();           //初始化串口1
  36   1        while(1)
  37   1        {
  38   2          SN=Read_Card();       //读取卡号数据
  39   2          if(SN)                //若卡号不为0，即有效卡号
  40   2          {
  41   3            printf("ID: (%lX)H,",SN); //以十六进制数形式打印卡号数据
  42   3            printf(" (%ld)D.\r\n",SN);//以长整型形式打印卡号数据
  43   3            SN=0;               //清零卡号
  44   3          }
  45   2        }
  46   1      }
  47          /****************************************************************/
  48          //延时函数delay()，有形参Count用于控制延时函数执行次数，无返回值
  49          /****************************************************************/
  50          void delay(u16 Count)
  51          {
  52   1        u8 i,j;
  53   1        while (Count--)
  54   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              05/13/2025 08:44:01 PAGE 2   

  55   2          for(i=0;i<50;i++)
  56   2            for(j=0;j<20;j++);
  57   2        }
  58   1      }
  59          /****************************************************************/
  60          //384us延时函数delay384us()，无形参，无返回值，这是用STC-ISP算出
  61          //来的384us延时，此延时可以不严格，但应大于256us小于512us
  62          /****************************************************************/
  63          void delay384us(void)//@12MHz
  64          {
  65   1        u8 i, j;
  66   1        _nop_();
  67   1        _nop_();
  68   1        i=6;
  69   1        j=249;
  70   1        do
  71   1        {
  72   2          while(--j);
  73   2        } while(--i);
  74   1      }
  75          /****************************************************************/
  76          //IO初始化函数IO_Init()，无形参，无返回值
  77          /****************************************************************/
  78          void IO_init(void)
  79          {
  80   1        //配置P1.6为推挽/强上拉模式
  81   1        P1M0|=0x40;     //P1M0.6=1
  82   1        P1M1&=0xBF;     //P1M1.6=0
  83   1        //配置P3.2为准双向/弱上拉模式
  84   1        P3M0&=0xFB;     //P3M0.2=0
  85   1        P3M1&=0xFB;     //P3M1.2=0
  86   1        delay(10);      //等待I/O模式配置稳定
  87   1      }
  88          /********************************************************************/
  89          //系统时钟输出函数SYSCLK_CCO()，有形参TYPE用于选择时钟源（0-外部时钟）
  90          //（1-片内高速时钟）（2-片内低速时钟），有形参SET_F用于指定时钟源
  91          //分频系数，有形参SET_P用于指定输出引脚的选择（P5.4/P1.6）无返回值
  92          /********************************************************************/
  93          void SYSCLK_CCO(u8 TYPE,u8 SET_F,u8 SET_P)
  94          {
  95   1        P_SW2|=0x80;          //允许访问扩展特殊功能寄存器XSFR
  96   1        switch(TYPE)
  97   1        {
  98   2          case 0:
  99   2          {
 100   3            XOSCCR|=0xC0;     //使能外部晶体振荡器
 101   3            while(!(XOSCCR&0x01));//等待外部时钟稳定
 102   3            //配置MCKSEL[1:0]=“01”，选择外部时钟
 103   3            CLKSEL&=0xFD;     //清零MCKSEL[1:0]的高位
 104   3            CLKSEL|=0x01;     //配置MCKSEL[1:0]的低位
 105   3          }break;   
 106   2          case 1:             //若选择片内高速时钟，则无需配置时钟选择
 107   2          {}break;
 108   2          case 2:
 109   2          {
 110   3            IRC32KCR|=0x80;   //使能内部32kHz低速IRC控制寄存器
 111   3            while(!(IRC32KCR&0x01));//等待内部低速时钟稳定
 112   3            CLKSEL|=0x03;     //配置MCKSEL[1:0]=“11”选择内部低速IRC时钟
 113   3          }break;
 114   2        }
 115   1        switch(SET_F)
 116   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              05/13/2025 08:44:01 PAGE 3   

 117   2          case 1:{MCLKOCR&=0x80;MCLKOCR|=0x01;}break;   //Fsysclk/1
 118   2          case 2:{MCLKOCR&=0x80;MCLKOCR|=0x02;}break;   //Fsysclk/2
 119   2          case 4:{MCLKOCR&=0x80;MCLKOCR|=0x04;}break;   //Fsysclk/4
 120   2          case 8:{MCLKOCR&=0x80;MCLKOCR|=0x08;}break;   //Fsysclk/8
 121   2          case 16:{MCLKOCR&=0x80;MCLKOCR|=0x10;}break;  //Fsysclk/16
 122   2          case 32:{MCLKOCR&=0x80;MCLKOCR|=0x20;}break;  //Fsysclk/32
 123   2          case 64:{MCLKOCR&=0x80;MCLKOCR|=0x40;}break;  //Fsysclk/64
 124   2          case 96:{MCLKOCR&=0x80;MCLKOCR|=0x60;}break;  //Fsysclk/96
 125   2          case 127:{MCLKOCR&=0x80;MCLKOCR|=0x7F;}break; //Fsysclk/127
 126   2        }
 127   1        if(SET_P==0)
 128   1          MCLKOCR&=0x7F;      //配置时钟由P5.4引脚输出
 129   1        else
 130   1          MCLKOCR|=0x80;      //配置时钟由P1.6引脚输出
 131   1        P_SW2&=0x7F;          //结束并关闭XSFR访问
 132   1      }
 133          /********************************************************************/
 134          //串口1初始化函数UART1_Init()，无形参，无返回值
 135          /********************************************************************/
 136          void UART1_Init(void)
 137          {
 138   1        SCON=0x50;      //181结构，可变波特率，允许数据接收
 139   1        AUXR|=0x01;     //串口1选择定时器2为波特率发生器
 140   1        AUXR|=0x04;     //定时器时钟1T模式
 141   1        T2L=BAUD_SET;   //设置定时初始值
 142   1        T2H=BAUD_SET>>8;//设置定时初始值
 143   1        AUXR|=0x10;     //定时器2开始计时
 144   1        RI=0;TI=0;      //清除接收数据标志位和发送数据标志位
 145   1      }
 146          /********************************************************************/
 147          //串口1发送单字符数据函数U1SEND_C()，有形参SEND_C即为欲发送单字节
 148          //数据，无返回值
 149          /********************************************************************/
 150          void U1SEND_C(u8 SEND_C)
 151          {
 152   1        TI=0;           //清除发送完成标志位
 153   1        SBUF=SEND_C;    //发送数据
 154   1        while(!TI);     //等待数据发送完成
 155   1      }
 156          /********************************************************************/
 157          //发送字符重定向函数char putchar(char ch)，有形参ch，有返回值ch
 158          /********************************************************************/
 159          char putchar(char ch)
 160          {
 161   1        U1SEND_C((u8)ch);//通过串口1发送数据
 162   1        return ch;
 163   1      }
 164          /********************************************************************/
 165          //读卡函数Read_Card()，无形参，有返回值temp
 166          /********************************************************************/
 167          u32 Read_Card(void)
 168          {
 169   1        return 0;
 170   1        
 171   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    436    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              05/13/2025 08:44:01 PAGE 4   

   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
